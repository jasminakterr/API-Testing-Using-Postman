{
	"info": {
		"_postman_id": "d83ec93f-ac52-494a-ae67-dc63dc1722a8",
		"name": "Jasmin_SQA",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39619519",
		"_collection_link": "https://www.postman.com/ggh555/workspace/api-testing/collection/39619519-d83ec93f-ac52-494a-ae67-dc63dc1722a8?action=share&source=collection_link&creator=39619519"
	},
	"item": [
		{
			"name": "Create Booking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//********** First name generate *********//\r",
							"\r",
							"var firstName=pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(firstName)\r",
							"pm.environment.set(\"firstName\",firstName)\r",
							"\r",
							"//********** Last name generate *********//\r",
							"\r",
							"var lastName=pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(lastName)\r",
							"pm.environment.set(\"lastName\",lastName)\r",
							"\r",
							"//********** Total price generate *********//\r",
							"\r",
							"var totalPrice=pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"console.log(totalPrice)\r",
							"pm.environment.set(\"totalPrice\",totalPrice)\r",
							"\r",
							"//********** Deposit paid generate *********//\r",
							"\r",
							"var depositPaid=pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"console.log(depositPaid)\r",
							"pm.environment.set(\"depositPaid\",depositPaid)\r",
							"\r",
							"//********** Booking date generate *********//\r",
							"\r",
							"const moment = require('moment')\r",
							"const today = moment()\r",
							"//********** Checkin date generate *********//\r",
							"\r",
							"pm.environment.set(\"checkin\", today.add(1,'d').format(\"YYYY-MM-DD\"))\r",
							"//********** Checkout date generate *********//\r",
							"\r",
							"pm.environment.set(\"checkout\",today.add(7,'d').format(\"YYYY-MM-DD\") )\r",
							"    \r",
							"//********** Additional needs generate *********// \r",
							"\r",
							"var additionalNeeds = pm.variables.replaceIn(\"{{$randomNoun}}\")\r",
							"console.log(additionalNeeds)\r",
							"pm.environment.set(\"additionalNeeds\", additionalNeeds)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"pm.environment.set(\"id\",jsonData.bookingid)\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "bookingid={{id}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{firstName}}\",\r\n\t\"lastname\" : \"{{lastName}}\",\r\n\t\"totalprice\" : {{totalPrice}},\r\n\t\"depositpaid\" : {{depositPaid}},\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{checkin}}\",\r\n    \t\"checkout\" : \"{{checkout}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"{{additionalNeeds}}\"\r\n}\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking"
					]
				},
				"description": "## **Create a new booking**\n\nThis endpoint is used to create a new booking by providing the necessary details.\n\n## Purpose\n\nThe purpose of this request is to create a new booking with the guest's information, booking dates, and any additional needs or special requests.\n\n## Expected Input\n\nThe request should include the following parameters in the raw request body type:\n\n- `firstname` (string): The first name of the guest.\n    \n- `lastname` (string): The last name of the guest.\n    \n- `totalprice` (number): The total price of the booking.\n    \n- `depositpaid` (boolean): Indicates if the deposit has been paid.\n    \n- `bookingdates` (object): Object containing the check-in and check-out dates.\n    \n\n1. `checkin` (string): The check-in date in the format \"YYYY-MM-DD\".\n    \n2. `checkout` (string): The check-out date in the format \"YYYY-MM-DD\".\n    \n\n- `additionalneeds` (string): Any additional needs or special requests for the booking.\n    \n\n## Expected Output\n\nUpon successful execution, the response will have a status code of 200 and a JSON object with the following properties:\n\n- `bookingid` (number): The ID of the newly created booking.\n    \n- `booking` (object): An object containing the details of the booking, including:\n    \n- `firstname` (string): The first name of the guest.\n    \n- `lastname` (string): The last name of the guest.\n    \n- `totalprice` (number): The total price of the booking.\n    \n- `depositpaid` (boolean): Indicates if the deposit has been paid.\n    \n- `bookingdates` (object): Object containing the check-in and check-out dates.\n    \n\n1. `checkin` (string): The check-in date in the format \"YYYY-MM-DD\".\n    \n2. `checkout` (string): The check-out date in the format \"YYYY-MM-DD\".\n    \n\n- `additionalneeds` (string): Any additional needs or special requests for the booking.\n    \n\n# Response(Json Scema)\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"bookingid\": {\n      \"type\": \"number\"\n    },\n    \"booking\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"firstname\": {\n          \"type\": \"string\"\n        },\n        \"lastname\": {\n          \"type\": \"string\"\n        },\n        \"totalprice\": {\n          \"type\": \"number\"\n        },\n        \"depositpaid\": {\n          \"type\": \"boolean\"\n        },\n        \"bookingdates\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"checkin\": {\n              \"type\": \"string\"\n            },\n            \"checkout\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"additionalneeds\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Booking by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							" var jsonData = pm.response.json();\r",
							"\r",
							"    // First Name validation\r",
							"    pm.test(\"First Name Validation\", function () {\r",
							"        pm.expect(jsonData.firstname).to.eql(pm.environment.get(\"firstName\"));\r",
							"    });\r",
							"\r",
							"    // Last name validation\r",
							"    pm.test(\"Last Name Validation\", function () {\r",
							"        pm.expect(jsonData.lastname).to.eql(pm.environment.get(\"lastName\"));\r",
							"    });\r",
							"\r",
							"    // Total price validation\r",
							"    pm.test(\"Total Price Validation\", function () {\r",
							"        pm.expect(jsonData.totalprice).to.eql(parseInt(pm.environment.get(\"totalPrice\")));\r",
							"    });\r",
							"\r",
							"    // Deposit paid validation\r",
							"    pm.test(\"Deposit paid Validation\", function () {\r",
							"        pm.expect(jsonData.depositpaid).to.eql(pm.environment.get(\"depositPaid\") === 'true');\r",
							"    });\r",
							"\r",
							"    // Booking date validation\r",
							"    pm.test(\"Checkin Date Validation\", function () {\r",
							"        const moment = require('moment');\r",
							"        const responseCheckin = moment(jsonData.bookingdates.checkin).format(\"YYYY-MM-DD\");\r",
							"        const expectedCheckin = pm.environment.get(\"checkin\");\r",
							"        pm.expect(responseCheckin).to.eql(expectedCheckin);\r",
							"    });\r",
							"\r",
							"    // Checkout Validation\r",
							"    pm.test(\"Checkout Date Validation\", function () {\r",
							"        const moment = require('moment');\r",
							"        const responseCheckout = moment(jsonData.bookingdates.checkout).format(\"YYYY-MM-DD\");\r",
							"        const expectedCheckout = pm.environment.get(\"checkout\");\r",
							"        pm.expect(responseCheckout).to.eql(expectedCheckout);\r",
							"    });\r",
							"\r",
							"    // Additional needs Validation\r",
							"    pm.test(\"Additional Needs Validation\", function () {\r",
							"        pm.expect(jsonData.additionalneeds).to.eql(pm.environment.get(\"additionalNeeds\"));\r",
							"    });\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				},
				"description": "## Get Booking Details\n\nThis endpoint retrieves the details of a specific booking identified by the bookingid.\n\n# Request\n\n  \nMethod: `GET`\n\nURL: [<code>https://restful-booker.herokuapp.com/booking/</code>](https://restful-booker.herokuapp.com/booking/)\n\n# Response(Json Scema)\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"firstname\": { \"type\": \"string\" },\n    \"lastname\": { \"type\": \"string\" },\n    \"totalprice\": { \"type\": \"number\" },\n    \"depositpaid\": { \"type\": \"boolean\" },\n    \"bookingdates\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"checkin\": { \"type\": \"string\", \"format\": \"date\" },\n        \"checkout\": { \"type\": \"string\", \"format\": \"date\" }\n      }\n    },\n    \"additionalneeds\": { \"type\": \"string\" }\n  }\n}\nThe response body contains the following fields:\n- `firstname` (string): The first name of the guest.\n- `lastname` (string): The last name of the guest.\n- `totalprice` (number): The total price of the booking.\n- `depositpaid` (boolean): Indicates if the deposit has been paid.\n- `bookingdates` (object): Object containing the check-in and check-out dates.\n  - `checkin` (string, date format): The check-in date.\n  - `checkout` (string, date format): The check-out date.\n- `additionalneeds` (string): Any additional needs breakfast.\n\n ```"
			},
			"response": []
		},
		{
			"name": "Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData=pm.response.json()\r",
							"pm.environment.set(\"Access_Token\",jsonData.token)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth"
					]
				},
				"description": "# Authentication Endpoint\n\nThis endpoint allows users to authenticate by providing their username and password.\n\n# Request\n\n- Method: `POST`\n    \n- Base URL: [<code>https://restful-booker.herokuapp.</code>](https://restful-booker.herokuapp.com)\n    \n- Path: `/auth`\n    \n- Headers: Content-Type: `application/json`\n    \n- Body:\n    \n\n`username` (string, required): The username of the user.\n\n`password` (string, required): The password of the user.\n\n# Response(Json Scema)\n\n``` json\n{\n  \"token\": \"string\"\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Update Booking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//********** First name generate *********//\r",
							"\r",
							"var updated_firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(updated_firstName)\r",
							"pm.environment.set(\"updated_firstName\", updated_firstName)\r",
							"\r",
							"//********** Last name generate *********// \r",
							"\r",
							"var updated_lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(updated_lastName)\r",
							"pm.environment.set(\"updated_lastName\", updated_lastName)\r",
							"\r",
							"//********** Total price generate *********// \r",
							"\r",
							"var updated_totalPrice = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"console.log(updated_totalPrice)\r",
							"pm.environment.set(\"updated_totalPrice\", updated_totalPrice)\r",
							"\r",
							"//********** Deposit paid generate *********//\r",
							"\r",
							"var Updated_depositPaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"console.log(Updated_depositPaid)\r",
							"pm.environment.set(\"Updated_depositPaid\", Updated_depositPaid)\r",
							"\r",
							"//********** Booking date generate *********//\r",
							"\r",
							"const moment = require('moment')\r",
							"const today = moment()\r",
							"\r",
							"//********** Checkin date generate *********//\r",
							"\r",
							"pm.environment.set(\"updated_checkin\", today.add(1,'d').format(\"YYYY-MM-DD\"))\r",
							"\r",
							"//********** Checkout date generate *********//\r",
							"\r",
							"pm.environment.set(\"updated_checkout\",today.add(7,'d').format(\"YYYY-MM-DD\") )\r",
							"\r",
							"//********** Additional needs generate *********// \r",
							"   \r",
							"var updated_additionalNeeds = pm.variables.replaceIn(\"{{$randomNoun}}\")\r",
							"console.log(updated_additionalNeeds)\r",
							"pm.environment.set(\"updated_additionalNeeds\", updated_additionalNeeds)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{Access_Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{updated_firstName}}\",\r\n\t\"lastname\" : \"{{updated_lastName}}\",\r\n\t\"totalprice\" : {{updated_totalPrice}},\r\n\t\"depositpaid\" : {{Updated_depositPaid}},\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{updated_checkin}}\",\r\n    \t\"checkout\" : \"{{updated_checkout}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"{{updated_additionalNeeds}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				},
				"description": "# Update Booking Information\n\nThis endpoint allows the client to update the booking information by sending an HTTP PUT request to the specified booking ID.\n\n# Request Body\n\n- `firstname` (string, required): The first name of the guest.\n    \n- `lastname` (string, required): The last name of the guest.\n    \n- `totalprice` (number, required): The total price of the booking.\n    \n- `depositpaid` (boolean, required): Indicates if the deposit has been paid.\n    \n- `bookingdates` (object, required): Object containing check-in and check-out dates.\n    \n\n1. `checkin` (string, required): The check-in date for the booking.\n    \n2. `checkout` (string, required): The check-out date for the booking.\n    \n\n- `additionalneeds` (string, required): Any additional needs or requests for the booking.\n    \n\n# Response(Json Scema)\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"bookingid\": { \"type\": \"string\" },\n    \"booking\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"firstname\": { \"type\": \"string\" },\n        \"lastname\": { \"type\": \"string\" },\n        \"totalprice\": { \"type\": \"number\" },\n        \"depositpaid\": { \"type\": \"boolean\" },\n        \"bookingdates\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"checkin\": { \"type\": \"string\" },\n            \"checkout\": { \"type\": \"string\" }\n          }\n        },\n        \"additionalneeds\": { \"type\": \"string\" }\n      }\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Check after Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// First Name validation\r",
							"pm.test(\"Updated First Name Validation\",function(){\r",
							"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"updated_firstName\"))\r",
							"})\r",
							"\r",
							"// Last name validation\r",
							"pm.test(\"Updated Last Name Validation\",function(){\r",
							"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"updated_lastName\"))\r",
							"})\r",
							"\r",
							"// Total price validation\r",
							"var totalPrice;\r",
							"pm.test(\"Updated Total Price Validation\",function(){\r",
							"    pm.expect(pm.response.text()).to.include(parseInt(pm.environment.get(\"updated_totalPrice\")))\r",
							"})\r",
							"\r",
							"// Deposit paid validation\r",
							"pm.test(\"Updated Deposit paid Validation\",function(){\r",
							"    const expecteddepositpaid = pm.environment.get(\"Updated_depositPaid\") === 'true';\r",
							"    pm.expect(pm.response.text()).to.include(expecteddepositpaid.toString());\r",
							"})\r",
							"\r",
							"// Booking date validation\r",
							"var json=pm.response.json();\r",
							"pm.test(\"Updated Checkin Date Validation\",function(){\r",
							"    const moment = require('moment');\r",
							"    const responseCheckin = moment(json.bookingdates.checkin).format(\"YYYY-MM-DD\");\r",
							"    const expectedCheckin = pm.environment.get(\"updated_checkin\");\r",
							"    pm.expect(responseCheckin).to.eql(expectedCheckin);\r",
							"})\r",
							"\r",
							"// Checkout Validation\r",
							"pm.test(\"Updated Checkout Date Validation\",function(){\r",
							"    const moment = require('moment');\r",
							"    const responseCheckout = moment(json.bookingdates.checkout).format(\"YYYY-MM-DD\");\r",
							"    const expectedCheckout = pm.environment.get(\"updated_checkout\");\r",
							"    pm.expect(responseCheckout).to.eql(expectedCheckout);\r",
							"})\r",
							"\r",
							"// Additional needs Validation\r",
							"pm.test(\"Updated Additional Needs Validation\",function(){\r",
							"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"updated_additionalNeeds\"));\r",
							"})\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{Access_Token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				},
				"description": "# Check after Update Booking\n\nThis endpoint retrieves the details of a specific booking identified by the bookingid parameter.\n\n# Response\n\nThe response will be a JSON object with the following properties:\n\n- `bookingid`(number) The unique identifier for the booking.\n    \n- `booking_details`(object) An object containing the details of the booking, including information such as the customer's name, check-in date, check-out date, room type, and any additional preferences.\n    \n- `payment_details` (object) An object containing payment details, such as the total amount, payment status, and method of payment.\n    \n\n**Response(Json Scema)**\n\n``` json\n{\n    \"bookingid\": 123456,\n    \"booking_details\": {\n        \"customer_name\": \"Jasmin Priya\",\n        \"check_in_date\": \"2024-11-01\",\n        \"check_out_date\": \"2024-11-07\",\n        \"room_type\": \"Deluxe\",\n        \"additional_preferences\": \"Sea Side room\"\n    },\n    \"payment_details\": {\n        \"total_amount\": 800.00,\n        \"payment_status\": \"Paid\",\n        \"payment_method\": \"Credit Card\"\n    }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Booking",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{Access_Token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				},
				"description": "## Delete Booking\n\nThis endpoint is used to delete a specific booking identified by the bookingid.\n\n# Request\n\n- Method: `DELETE`\n    \n- Endpoint: [<code>https://restful-booker.herokuapp.com/booking/</code>](https://restful-booker.herokuapp.com/booking/)\n    \n\n# Response\n\n  \nThe response for this request is a JSON schema that represents the structure of the response body. It includes the properties and data types expected in the response."
			},
			"response": []
		},
		{
			"name": "Booking after Delete",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				},
				"description": "## Get Booking Details\n\nThis endpoint retrieves the details of a specific booking identified by the bookingid.\n\n# Request\n\nPath Parameters  \n`bookingid` (string, required): The unique identifier of the booking.\n\n# Response\n\nThe response will be a JSON object with the following properties:\n\n- `bookingid` (string): The unique identifier of the booking.\n    \n- `name` (string): The name of the person who made the booking.\n    \n- `checkin` (string): The check-in date for the booking.\n    \n- `checkout` (string): The check-out date for the booking.\n    \n- `guests` (number): The number of guests included in the booking.\n    \n- `rooms` (array): An array of room details for the booking, including room number and type.\n    \n\n# Response(Json Scema)\n\n``` json\n{\n  \"bookingid\": \"string\",\n  \"name\": \"string\",\n  \"checkin\": \"string\",\n  \"checkout\": \"string\",\n  \"guests\": 0,\n  \"rooms\": [\n    {\n      \"roomNumber\": \"string\",\n      \"roomType\": \"string\"\n    }\n  ]\n}\n\n ```"
			},
			"response": []
		}
	]
}